# -*- coding: utf-8 -*-
"""predict_diabetes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m-qc2Mcba-11ca2sW_szf0-YnCbOKcNJ
"""

# predict_diabetes.py

# !pip install streamlit

import streamlit as st
import numpy as np
import pandas as pd
import joblib
from tensorflow.keras.models import load_model
import plotly.express as px

# Load model and scaler
model = load_model('diabetes_model.h5')
scaler = joblib.load('scaler.pkl')

st.title("🩺 AI Diabetes Risk Assessment")

st.markdown("""
This app uses an AI model to predict the **risk of diabetes** based on clinical inputs.
""")

# Input sliders
glucose = st.slider('Glucose', 0, 200, 120)
insulin = st.slider('Insulin', 0, 300, 80)
bmi = st.slider('BMI', 0.0, 70.0, 28.0)
age = st.slider('Age', 10, 100, 33)

# Prepare input
input_data = np.array([[glucose, insulin, bmi, age]])
input_scaled = scaler.transform(input_data)

# Predict
prediction = model.predict(input_scaled)[0][0]
result = "High Risk ⚠️" if prediction > 0.5 else "Low Risk ✅"

# Output
st.subheader("🧾 Prediction Result:")
st.write(f"**{result}** (Probability: {prediction:.2f})")

# Optional: Chart for visual feedback
df_input = pd.DataFrame({
    'Feature': ['Glucose', 'Insulin', 'BMI', 'Age'],
    'Value': [glucose, insulin, bmi, age]
})
fig = px.bar(df_input, x='Feature', y='Value', color='Feature', title='Input Feature Overview')
st.plotly_chart(fig)
